/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainFrames;

import com.google.gson.Gson;
import java.awt.Color;
import java.io.File;
import java.sql.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mehul
 */
public class AdminPnl extends javax.swing.JFrame {

    private boolean selchk;
    private DefaultTableModel detblmdl;
    private DefaultTableModel edtblmdl;
    private DefaultTableModel sdtblmdl;
    private Connection con;
    private java.sql.PreparedStatement ps;
    private java.sql.ResultSet rs, rs2;
    private boolean autoref = true;

    /**
     * Creates new form NewJFrame
     */
    Thread ub = new Thread(new Runnable() {
        @Override
        public void run() {
            sdtblmdl = (DefaultTableModel) SDTable.getModel();

            while (autoref) {
                sdtblmdl.setRowCount(0);
                try {
                    ps = con.prepareStatement("select * from bills");
                    rs2 = ps.executeQuery();
                    while (rs2.next()) {
                        String[] tmp = {rs2.getString(1), rs2.getString(2), Double.toString(rs2.getDouble(6))};
                        sdtblmdl.addRow(tmp);
                    }
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(EmpPnl.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(EmpPnl.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    });

    Thread upinc = new Thread(new Runnable() {
        @Override
        public void run() {
            try {
              
                while (true) {
                      ps = con.prepareStatement("SELECT SUM(total) FROM bills");
                    rs = ps.executeQuery();
                    rs.next();
                    SDincom.setText(Double.toString(rs.getDouble(1)));
                    Thread.sleep(1500);
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminPnl.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(AdminPnl.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    });

    public AdminPnl() {
        this.getContentPane().setBackground(Color.GRAY);
        try {
            con = (Connection) java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/ABSOLUTE09", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(AdminPnl.class.getName()).log(Level.SEVERE, null, ex);
        }
//      con = MainPage.con;
        initComponents();
        edtblmdl = (DefaultTableModel) this.EDTable.getModel();
        detblmdl = (DefaultTableModel) this.DEtable.getModel();
        sdtblmdl = (DefaultTableModel) this.SDTable.getModel();
        ub.start();
        upinc.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        AdminPanel = new javax.swing.JTabbedPane();
        AddEmpPanel = new javax.swing.JPanel();
        AEepass = new javax.swing.JTextField();
        AEeid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rb1 = new javax.swing.JRadioButton();
        AEeage = new javax.swing.JSpinner();
        rb2 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AEeaddr = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        AEb1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        AEb2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AEename = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        esalaryL = new javax.swing.JLabel();
        AEesalary = new javax.swing.JSpinner();
        DeleteEmpPanel = new javax.swing.JPanel();
        DEchk1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        DEview = new javax.swing.JButton();
        DEt1 = new javax.swing.JTextField();
        DEcancle = new javax.swing.JButton();
        DEdelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DEtable = new javax.swing.JTable();
        EmpDetailsPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        EDt2 = new javax.swing.JTextField();
        EDb3 = new javax.swing.JButton();
        EDb5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        EDTable = new javax.swing.JTable();
        EDchk1 = new javax.swing.JCheckBox();
        StoreDetailPanel = new javax.swing.JPanel();
        SDview = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        SDdata = new javax.swing.JTextArea();
        SDdelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        SDincom = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        SDTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        BHaref = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN PANEL");

        AddEmpPanel.setBackground(new java.awt.Color(102, 102, 102));

        AEepass.setBackground(new java.awt.Color(204, 204, 204));

        AEeid.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("GENDER :");

        jLabel7.setText("ADDRESS :");

        rb1.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rb1);
        rb1.setText("MALE");
        rb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1ActionPerformed(evt);
            }
        });

        rb2.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rb2);
        rb2.setText("FEMALE");
        rb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb2ActionPerformed(evt);
            }
        });

        jLabel5.setText("AGE :");

        AEeaddr.setBackground(new java.awt.Color(204, 204, 204));
        AEeaddr.setColumns(20);
        AEeaddr.setRows(5);
        jScrollPane1.setViewportView(AEeaddr);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("                                                                       ADD EMPLOYEE");

        AEb1.setText("ADD");
        AEb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AEb1ActionPerformed(evt);
            }
        });

        jLabel2.setText("NAME :");

        AEb2.setText("RESET");
        AEb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AEb2ActionPerformed(evt);
            }
        });

        jLabel3.setText("PASSWORD :");

        AEename.setBackground(new java.awt.Color(204, 204, 204));
        AEename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AEenameActionPerformed(evt);
            }
        });

        jLabel6.setText("EID :");

        esalaryL.setText("SALARY : ");

        javax.swing.GroupLayout AddEmpPanelLayout = new javax.swing.GroupLayout(AddEmpPanel);
        AddEmpPanel.setLayout(AddEmpPanelLayout);
        AddEmpPanelLayout.setHorizontalGroup(
            AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEmpPanelLayout.createSequentialGroup()
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEmpPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE))
                    .addGroup(AddEmpPanelLayout.createSequentialGroup()
                        .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                            .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                                    .addGap(8, 8, 8)
                                                    .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(esalaryL, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                                    .addComponent(rb1)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(rb2))
                                                .addComponent(AEename, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                                .addComponent(AEepass)
                                                .addComponent(AEeid)
                                                .addComponent(AEesalary, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEmpPanelLayout.createSequentialGroup()
                                            .addComponent(AEeage, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(195, 195, 195)))
                                    .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(36, 36, 36)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddEmpPanelLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(AEb1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144)
                                .addComponent(AEb2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AddEmpPanelLayout.setVerticalGroup(
            AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEmpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(AEename, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(AEepass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(AEeid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(esalaryL)
                    .addComponent(AEesalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rb1)
                    .addComponent(rb2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AEeage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(AddEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AEb1)
                    .addComponent(AEb2))
                .addGap(109, 109, 109))
        );

        AdminPanel.addTab("Add Employee", AddEmpPanel);

        DeleteEmpPanel.setBackground(new java.awt.Color(102, 102, 102));

        DEchk1.setBackground(new java.awt.Color(204, 204, 204));
        DEchk1.setText("Display All Record.");
        DEchk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEchk1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("                                                                          DELETE EMPLOYEE");

        jLabel9.setText("ENTER EMPLOYEE ID :");

        DEview.setBackground(new java.awt.Color(204, 204, 204));
        DEview.setText("VIEW");
        DEview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEviewActionPerformed(evt);
            }
        });

        DEt1.setBackground(new java.awt.Color(204, 204, 204));
        DEt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEt1ActionPerformed(evt);
            }
        });

        DEcancle.setText("CANCLE");
        DEcancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEcancleActionPerformed(evt);
            }
        });

        DEdelete.setText("DELETE");
        DEdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEdeleteActionPerformed(evt);
            }
        });

        DEtable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        DEtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EID", "NAME", "PASSWORD", "GENDER", "SALARY", "AGE", "ADDRESS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DEtable.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jScrollPane2.setViewportView(DEtable);
        if (DEtable.getColumnModel().getColumnCount() > 0) {
            DEtable.getColumnModel().getColumn(0).setPreferredWidth(20);
            DEtable.getColumnModel().getColumn(1).setPreferredWidth(100);
            DEtable.getColumnModel().getColumn(2).setPreferredWidth(80);
            DEtable.getColumnModel().getColumn(3).setPreferredWidth(10);
            DEtable.getColumnModel().getColumn(4).setPreferredWidth(50);
            DEtable.getColumnModel().getColumn(5).setPreferredWidth(7);
            DEtable.getColumnModel().getColumn(6).setPreferredWidth(200);
        }

        javax.swing.GroupLayout DeleteEmpPanelLayout = new javax.swing.GroupLayout(DeleteEmpPanel);
        DeleteEmpPanel.setLayout(DeleteEmpPanelLayout);
        DeleteEmpPanelLayout.setHorizontalGroup(
            DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteEmpPanelLayout.createSequentialGroup()
                .addGroup(DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeleteEmpPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(DeleteEmpPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(DEt1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(DEview)
                                .addGap(30, 30, 30)
                                .addComponent(DEchk1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 275, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DeleteEmpPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(DEcancle)
                        .addGap(144, 144, 144)
                        .addComponent(DEdelete)))
                .addContainerGap())
        );
        DeleteEmpPanelLayout.setVerticalGroup(
            DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteEmpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DEview)
                    .addComponent(DEt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DEchk1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DeleteEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DEcancle)
                    .addComponent(DEdelete))
                .addContainerGap())
        );

        DEview.setToolTipText("it is only for searching record..");

        AdminPanel.addTab("Delete Employee", DeleteEmpPanel);

        EmpDetailsPanel.setBackground(new java.awt.Color(102, 102, 102));

        jLabel10.setDisplayedMnemonic('D');
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("                                                                  EMPLOYEE DETAILS");

        jLabel11.setText("ENTER EMPLOYEE ID :");

        EDt2.setBackground(new java.awt.Color(204, 204, 204));
        EDt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDt2ActionPerformed(evt);
            }
        });

        EDb3.setText("RESET");
        EDb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDb3ActionPerformed(evt);
            }
        });

        EDb5.setText("SHOW");
        EDb5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDb5ActionPerformed(evt);
            }
        });

        EDTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 204), 1, true));
        EDTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EID", "NAME", "PASSWORD", "GENDER", "SALARY", "AGE", "ADDRESS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EDTable.setAutoscrolls(false);
        EDTable.setSelectionBackground(new java.awt.Color(0, 51, 204));
        EDTable.setSelectionForeground(new java.awt.Color(51, 255, 0));
        jScrollPane3.setViewportView(EDTable);
        if (EDTable.getColumnModel().getColumnCount() > 0) {
            EDTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            EDTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            EDTable.getColumnModel().getColumn(2).setPreferredWidth(80);
            EDTable.getColumnModel().getColumn(3).setPreferredWidth(10);
            EDTable.getColumnModel().getColumn(4).setPreferredWidth(50);
            EDTable.getColumnModel().getColumn(5).setPreferredWidth(7);
            EDTable.getColumnModel().getColumn(6).setPreferredWidth(200);
        }

        EDchk1.setBackground(new java.awt.Color(204, 204, 204));
        EDchk1.setText("Display All Record.");
        EDchk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDchk1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EmpDetailsPanelLayout = new javax.swing.GroupLayout(EmpDetailsPanel);
        EmpDetailsPanel.setLayout(EmpDetailsPanelLayout);
        EmpDetailsPanelLayout.setHorizontalGroup(
            EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpDetailsPanelLayout.createSequentialGroup()
                .addGroup(EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmpDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(EmpDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EDt2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(EDb5)
                                .addGap(32, 32, 32)
                                .addComponent(EDchk1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                                .addComponent(EDb3)
                                .addGap(20, 20, 20))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        EmpDetailsPanelLayout.setVerticalGroup(
            EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EDb3)
                    .addGroup(EmpDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EDt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EDb5)
                        .addComponent(EDchk1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        AdminPanel.addTab("Employee Details", EmpDetailsPanel);

        StoreDetailPanel.setBackground(new java.awt.Color(102, 102, 102));

        SDview.setText("VIEW");
        SDview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDviewActionPerformed(evt);
            }
        });

        SDdata.setEditable(false);
        SDdata.setBackground(new java.awt.Color(204, 204, 204));
        SDdata.setColumns(20);
        SDdata.setRows(5);
        jScrollPane4.setViewportView(SDdata);

        SDdelete.setText("DELETE");
        SDdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDdeleteActionPerformed(evt);
            }
        });

        jLabel12.setText("TOTAL INCOME :");

        SDincom.setEditable(false);
        SDincom.setBackground(new java.awt.Color(204, 204, 204));

        SDTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        SDTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill No", "Customer Name", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SDTable.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jScrollPane5.setViewportView(SDTable);

        jLabel13.setDisplayedMnemonic('D');
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("                                                                          STORE DETAILS");

        BHaref.setText("AUTO REFRESH (ON)");
        BHaref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHarefActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StoreDetailPanelLayout = new javax.swing.GroupLayout(StoreDetailPanel);
        StoreDetailPanel.setLayout(StoreDetailPanelLayout);
        StoreDetailPanelLayout.setHorizontalGroup(
            StoreDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StoreDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(StoreDetailPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(SDview)
                .addGap(81, 81, 81)
                .addComponent(SDdelete)
                .addGap(103, 103, 103)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SDincom, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BHaref)
                .addGap(33, 33, 33))
        );
        StoreDetailPanelLayout.setVerticalGroup(
            StoreDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StoreDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(StoreDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(StoreDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SDview)
                    .addComponent(SDdelete)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SDincom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BHaref))
                .addGap(23, 23, 23))
        );

        AdminPanel.addTab("Store Details", StoreDetailPanel);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButton1.setText("LOG-OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminPanel)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AdminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SDdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDdeleteActionPerformed
        try {
            sdtblmdl = (DefaultTableModel) SDTable.getModel();
            int[] indx = SDTable.getSelectedRows();
            if (indx.length == 0) {
                JOptionPane.showMessageDialog(this, "Select ROWS TO DELETE.");
            } else {
                String qry = "delete from bills where ";
                for (int i = 0; i < indx.length; i++) {
                    qry += ("bill_id = " + "\"" + SDTable.getValueAt(indx[i], 0) + "\"" + " or ");
                }
                qry += "bill_id=null";

                //        JOptionPane.showMessageDialog(this, qry);
                ps = con.prepareStatement(qry);

                if (ps.executeUpdate() == 0) {
                    JOptionPane.showMessageDialog(this, "Record Not Deleted...");
                } else {
                    JOptionPane.showMessageDialog(this, "Record Deleted...");
                    this.refreshTable(detblmdl);
                }
                for (int i = 0; i < indx.length; i++) {
                    File f = new File("bills//Bill_" + SDTable.getValueAt(indx[i], 0) + "_" + SDTable.getValueAt(indx[i], 1) + ".pdf");
                    if (f.exists()) {
                        f.delete();
                    }
                }

                for (int i = 0; i < indx.length; i++) {
                    sdtblmdl.removeRow(indx[i]);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPnl.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SDdeleteActionPerformed

    private void SDviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDviewActionPerformed
        this.SDdata.setText(null);
        sdtblmdl = (DefaultTableModel) SDTable.getModel();

        try {
            int indx = SDTable.getSelectedRow();

            ps = con.prepareStatement("select * from bills where bill_id=?");
            ps.setString(1, (String) SDTable.getValueAt(indx, 0));
            rs = ps.executeQuery();
            rs.next();
            Gson gs = new Gson();
            Bill b = gs.fromJson(rs.getString("data"), Bill.class);

            String tmp = "";
            tmp += "\nCustomer Name : " + b.getCname();
            tmp += "\nBill No : " + b.getBillid();
            tmp += "\n\nItem Name    Catagory    Price    Quantity";

            String data[][] = b.getData();
            for (int i = 0; i < data.length; i++) {
                tmp += "\n" + data[i][0] + "  :  " + data[i][1] + "  :  " + data[i][2] + "  :  " + data[i][3];
            }
            tmp += "\n\nTotal : " + b.getTotal();
            tmp += "\nPayment Mehtod : " + b.getPmethod();
            tmp += "\nempid : " + b.getHby();
            this.SDdata.setText(tmp);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Exception - IO");
        }
    }//GEN-LAST:event_SDviewActionPerformed

    private void EDchk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDchk1ActionPerformed
        if (EDchk1.isSelected())
            this.selchk = true;
        else
            this.selchk = false;
    }//GEN-LAST:event_EDchk1ActionPerformed

    private void EDb5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDb5ActionPerformed

        if (this.EDchk1.isSelected()) {
            try {

                ps = con.prepareStatement("Select * from employee");
                rs = ps.executeQuery();

                if (rs != null) {
                    while (rs.next()) {
                        String data[] = {rs.getString(1), rs.getString(3), rs.getString(2), rs.getString(4), Integer.toString(rs.getInt(7)), Integer.toString(rs.getInt(5)), rs.getString(6)
                        };
                        edtblmdl.addRow(data);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Record NOT FOUND.");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Exception..");
            }
        } else {
            try {

                String eid = EDt2.getText();

                if (!eid.equals("")) {
                    ps = con.prepareStatement("Select * from employee where id=?");
                    ps.setString(1, eid);
                    rs = ps.executeQuery();
                    if ((rs = checkUserExist(rs, eid)) != null) {
                        String data[] = {rs.getString(1), rs.getString(3), rs.getString(2), rs.getString(4), Integer.toString(rs.getInt(7)), Integer.toString(rs.getInt(5)), rs.getString(6)
                        };
                        edtblmdl.addRow(data);

                    } else {
                        JOptionPane.showMessageDialog(this, "Record NOT FOUND.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Enter EID");
                }

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Exception..");
            }
        }

        //tblmdl.removeRow(tblmdl.getRowCount()-1);
    }//GEN-LAST:event_EDb5ActionPerformed

    private void EDb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDb3ActionPerformed
        this.EDt2.setText(null);
        //   int i = 0;
        edtblmdl.setRowCount(0);
        // this.ta1.setText(null);
    }//GEN-LAST:event_EDb3ActionPerformed

    private void EDt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EDt2ActionPerformed

    private void DEdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEdeleteActionPerformed

        int[] sel = this.DEtable.getSelectedRows();
        try {
            String data = "";
            if (sel.length == 0) {
                JOptionPane.showMessageDialog(this, "No Row Selected..");
            } else {
                String qry = "delete from employee where";
                for (int i = 0; i < sel.length; i++) {
                    qry += (" id = " + "\"" + DEtable.getValueAt(sel[i], 0) + "\"" + " or ");
                }
                qry += "id=null";
                //     JOptionPane.showMessageDialog(this, qry);
                ps = con.prepareStatement(qry);
                if (ps.executeUpdate() == 0) {
                    JOptionPane.showMessageDialog(this, "Record Not Deleted...");
                } else {
                    JOptionPane.showMessageDialog(this, "Record Deleted...");
                    this.refreshTable(detblmdl);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Exception in Writing");
        }
    }//GEN-LAST:event_DEdeleteActionPerformed

    private void DEcancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEcancleActionPerformed
        this.DEt1.setText(null);
        // this.t2.setText(null);
        detblmdl.setRowCount(0);
    }//GEN-LAST:event_DEcancleActionPerformed

    private void DEt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DEt1ActionPerformed

    private void DEviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEviewActionPerformed
        detblmdl.setRowCount(0);
        try {
            if (this.DEchk1.isSelected()) {

                ps = con.prepareStatement("Select * from employee");
                rs = ps.executeQuery();

                if (rs != null) {
                    while (rs.next()) {
                        String data[] = {rs.getString(1), rs.getString(3), rs.getString(2), rs.getString(4), Integer.toString(rs.getInt(7)), Integer.toString(rs.getInt(5)), rs.getString(6)
                        };
                        detblmdl.addRow(data);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Record NOT FOUND.");
                }

            } else {

                String eid = DEt1.getText();

                if (!eid.equals("")) {
                    ps = con.prepareStatement("Select * from employee where id=?");
                    ps.setString(1, eid);
                    rs = ps.executeQuery();
                    if ((rs = checkUserExist(rs, eid)) != null) {
                        String data[] = {rs.getString(1), rs.getString(3), rs.getString(2), rs.getString(4), Integer.toString(rs.getInt(7)), Integer.toString(rs.getInt(5)), rs.getString(6)
                        };
                        detblmdl.addRow(data);

                    } else {
                        JOptionPane.showMessageDialog(this, "Record NOT FOUND.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Enter EID");
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Exception..");
        }
    }//GEN-LAST:event_DEviewActionPerformed

    private void AEenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AEenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AEenameActionPerformed

    private void AEb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AEb2ActionPerformed
        // TODO add your handling code here:
        this.AEename.setText(null);
        this.AEepass.setText(null);
        this.AEeid.setText(null);
        this.AEeaddr.setText(null);
        this.AEeage.setValue(new Integer(0));
        this.buttonGroup1.clearSelection();
        this.AEesalary.setValue(new Integer(0));
    }//GEN-LAST:event_AEb2ActionPerformed

    private void AEb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AEb1ActionPerformed
        try {

            if (!(this.AEename.getText().isEmpty() || this.AEepass.getText().isEmpty() || this.AEeid.getText().isEmpty() || (Integer) this.AEesalary.getValue() <= 0 || (Integer) this.AEeage.getValue() <= 0) && (rb1.isSelected() || rb2.isSelected())) {
                ps = con.prepareStatement("select * from employee where id=?");
                ps.setString(1, this.AEeid.getText().toString());
                java.sql.ResultSet rs = ps.executeQuery();

                //     rs.last();
                //   int no = rs.getRow();
                ResultSet rsc = null;
                if ((rsc = checkUserExist(rs, this.AEeid.getText().trim())) != null) {
                    JOptionPane.showMessageDialog(this, "User Already Exist : " + rs.getString(1) + "/" + rs.getString(3));
                } else {

                    ps = con.prepareStatement("insert into employee values(?,?,?,?,?,?,?)");
                    //ps.setInt(1, 0);  no auto increment column removed
                    ps.setString(1, AEeid.getText());
                    ps.setString(2, AEepass.getText());
                    ps.setString(3, AEename.getText());
                    ps.setString(4, buttonGroup1.getSelection().getActionCommand());
                    ps.setInt(5, Integer.parseInt(this.AEeage.getValue().toString()));
                    ps.setString(6, AEeaddr.getText());
                    ps.setInt(7, Integer.parseInt(this.AEesalary.getValue().toString()));
                    if (ps.executeUpdate() == 0) {
                        JOptionPane.showMessageDialog(this, "User Not Added..");
                    } else {
                        JOptionPane.showMessageDialog(this, "User Added..");
                        this.AEb2ActionPerformed(evt);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "fill all details..");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Exception..");
        }
    }//GEN-LAST:event_AEb1ActionPerformed

    private void rb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb2ActionPerformed
        this.rb2.setActionCommand("FEMALE");
    }//GEN-LAST:event_rb2ActionPerformed

    private void rb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1ActionPerformed
        this.rb1.setActionCommand("MALE");
    }//GEN-LAST:event_rb1ActionPerformed

    private void DEchk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEchk1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DEchk1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            con.close();
            JOptionPane.showMessageDialog(this, "Have A Greate Day!");
            new MainPage().setVisible(true);
            this.setVisible(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Exception.." + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BHarefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHarefActionPerformed
        if (autoref) {
            ub.suspend();
            //ub.interrupt();
            autoref = false;
            BHaref.setText("AUTO REFRESH (OFF)");

        } else {
            //ub.interrupt();
            ub.resume();
            autoref = true;
            BHaref.setText("AUTO REFRESH (ON)");
        }
        Logger.getLogger(EmpPnl.class.getName()).log(Level.INFO, "" + autoref + " " + ub.getState().name() + " " + Thread.activeCount());
    }//GEN-LAST:event_BHarefActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPnl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPnl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPnl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPnl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPnl().setVisible(true);
            }
        });
    }

    private ResultSet checkUserExist(ResultSet rs, String eid) {
        ResultSet tmp = null;
        try {
            rs.next();
            if (rs.getString(1).equals(eid)) {
                tmp = rs;
            }
        } catch (SQLException ex) {
            tmp = null;
            //  ex.printStackTrace();
        }
        return tmp;
    }

    private void refreshTable(DefaultTableModel tblmdl) {
        try {
            tblmdl.setRowCount(0);
            ps = con.prepareStatement("Select * from employee");

            rs = ps.executeQuery();

            if (rs != null) {
                while (rs.next()) {
                    String data[] = {rs.getString(1), rs.getString(3), rs.getString(2), rs.getString(4), Integer.toString(rs.getInt(7)), Integer.toString(rs.getInt(5)), rs.getString(6)
                    };
                    tblmdl.addRow(data);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPnl.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AEb1;
    private javax.swing.JButton AEb2;
    private javax.swing.JTextArea AEeaddr;
    private javax.swing.JSpinner AEeage;
    private javax.swing.JTextField AEeid;
    private javax.swing.JTextField AEename;
    private javax.swing.JTextField AEepass;
    private javax.swing.JSpinner AEesalary;
    private javax.swing.JPanel AddEmpPanel;
    private javax.swing.JTabbedPane AdminPanel;
    private javax.swing.JButton BHaref;
    private javax.swing.JButton DEcancle;
    private javax.swing.JCheckBox DEchk1;
    private javax.swing.JButton DEdelete;
    private javax.swing.JTextField DEt1;
    private javax.swing.JTable DEtable;
    private javax.swing.JButton DEview;
    private javax.swing.JPanel DeleteEmpPanel;
    private javax.swing.JTable EDTable;
    private javax.swing.JButton EDb3;
    private javax.swing.JButton EDb5;
    private javax.swing.JCheckBox EDchk1;
    private javax.swing.JTextField EDt2;
    private javax.swing.JPanel EmpDetailsPanel;
    private javax.swing.JTable SDTable;
    private javax.swing.JTextArea SDdata;
    private javax.swing.JButton SDdelete;
    private javax.swing.JTextField SDincom;
    private javax.swing.JButton SDview;
    private javax.swing.JPanel StoreDetailPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel esalaryL;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private static javax.swing.JRadioButton rb1;
    private static javax.swing.JRadioButton rb2;
    // End of variables declaration//GEN-END:variables
}
